{"version":3,"sources":["utils/auth.js","components/img/logo512.png","components/Navbar.js","components/Footer.js","components/Datos.js","components/img/hands.jpeg","components/img/homeless.jpeg","components/img/alms.jpeg","components/Imagen.js","components/Info.js","components/img/quote.jpg","components/Parallax.js","pages/Dashboard.js","utils/mutations.js","components/LoginForm.js","pages/Login.js","assets/1.jpg","components/PostDetailHeader/index.js","components/PostDetailBodyListItem/index.js","components/PostDetailBody/index.js","components/PostDetailProgressBar/index.js","utils/queries.js","pages/PostDetail/index.js","assets/createPostBG2.png","pages/CreatePost/index.js","components/PostListItem/index.js","assets/postListImg.jpg","assets/titleBG.jpg","pages/userPostList/index.js","components/PaymentCard.js","pages/Payment.js","pages/PostList/index.js","pages/Greetings/index.js","components/SignupForm.js","pages/SignUp.js","routes/Routes.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Navbar","props","className","to","src","headerImg","alt","href","GiftOutlined","Auth","loggedIn","HomeOutlined","onClick","logout","LogoutOutlined","LoginOutlined","Footer","Datos","Imagen","id","Hands","Homeless","Alms","role","Info","TeamOutlined","Parallax","style","backgroundImage","Quote","Dashboard","xs","LOGIN_USER","gql","ADD_USER","ADD_POST","LoginForm","useState","email","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","useMutation","loginUser","error","handleInputChange","event","target","name","value","handleFormSubmit","a","preventDefault","variables","data","login","console","last_name","username","phone","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","disabled","Login","postDetailHeader","projectName","date","PostDetailBodyListItem","isType","contentToReturn","postDetailBody","description","results","ulProps","map","ulProp","index","PostDetailProgressBar","percentage","loadBar","keyframes","InnerBar","styled","div","QUERY_ALL_POSTS","QUERY_SINGLE_POST","QUERY_USER_POSTS","Details","useParams","useQuery","postId","loading","postData","singlePost","user","fundraise_destination","expiration_date","totalDonation","donations","reduce","amount","Math","round","donation_desired","asd","project_name","publication_date","CreatePost","addPost","Dragger","Upload","TextArea","Input","useForm","form","fundraise_account","handleFormFail","log","multiple","action","info","status","file","fileList","message","success","onDrop","e","dataTransfer","files","bgImage","layout","onFinish","onFinishFailed","Item","label","rules","rows","htmlType","InboxOutlined","PostListItem","image","projectId","Meta","Card","pathname","hoverable","cover","title","PostList","postsData","singleUser","titleBg","_id","stripePromise","loadStripe","CheckoutForm","stripe","useStripe","elements","useElements","handleSubmit","createPaymentMethod","card","getElement","CardElement","paymentMethod","clear","PaymentCard","Payment","allPosts","Greetings","subTitle","extra","SignupForm","addUser","SignUp","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","Routes","ApolloProvider","exact","path","component","PostDetail","userProjects","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4fd581b6.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","export default __webpack_public_path__ + \"static/media/logo512.7db27754.png\";","import React from \"react\";\nimport \"../assets/css/Navbar.css\";\nimport { LoginOutlined } from \"@ant-design/icons\";\nimport { LogoutOutlined } from \"@ant-design/icons\";\nimport { GiftOutlined } from \"@ant-design/icons\";\nimport { HomeOutlined } from \"@ant-design/icons\";\nimport Auth from \"../utils/auth\";\nimport { Link } from \"react-router-dom\";\n// import { Route } from \"react-router-dom\";\n\nimport headerImg from \"./img/logo512.png\";\n\nfunction Navbar(props) {\n  return (\n    <ul className=\"header\">\n      <Link to=\"/\">\n        <img className=\"img\" src={headerImg} alt=\"header\" />\n      </Link>\n\n      <Link to=\"/\">\n        <h1 className=\"tituloHeader\">Hand in hands</h1>\n      </Link>\n      <div>\n\n        <a href=\"/projects\" className=\"buttonn\">\n          <GiftOutlined />\n        </a>\n\n        {Auth.loggedIn() ? (\n          <>\n            <a href=\"/userprojects\" className=\"buttonn\">\n              <HomeOutlined />\n            </a>\n            <a href=\"/\" className=\"buttonn\" onClick={Auth.logout}>\n              <LogoutOutlined />\n            </a>\n          </>\n        ) : (\n          <a href=\"/login\" className=\"buttonn\">\n            <LoginOutlined />\n          </a>\n        )}\n      </div>\n    </ul>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"../assets/css/Footer.css\";\n\nfunction Footer(props) {\n  return (\n    <section className=\"iheader\">\n      <p>\n        Organization Final-project is an Organization of Private Assistance, legally\n        constituted. AUTHORIZED DONATIONS ©2021 FINAL-PROJECT\n      </p>\n    </section>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"../assets/css/Datos.css\";\n\nfunction Datos(props) {\n  return (\n    <section className=\"containerr\">\n      <div className=\"row\">\n          <div className=\"col b\">1,314</div>\n          <div className=\"col b\">3,190</div>\n          <div className=\"col b\">175+</div>\n          <div className=\"col b\">338</div>\n        </div>\n\n        <div className=\"row\">\n          <div className=\"col s\">donors</div>\n          <div className=\"col s\">projects</div>\n          <div className=\"col s\">countries</div>\n          <div className=\"col s\">companies</div>\n        </div>\n    </section>\n  );\n}\n\nexport default Datos;\n","export default __webpack_public_path__ + \"static/media/hands.71654b85.jpeg\";","export default __webpack_public_path__ + \"static/media/homeless.59a861fa.jpeg\";","export default __webpack_public_path__ + \"static/media/alms.c7c26f47.jpeg\";","import React from \"react\";\nimport \"../assets/css/Imagen.css\";\nimport Hands from \"./img/hands.jpeg\"\nimport Homeless from \"./img/homeless.jpeg\"\nimport Alms from \"./img/alms.jpeg\"\n\nfunction Imagen(props) {\n  return (\n    <div\n      id=\"carouselExampleIndicators\"\n      className=\"carousel slide\"\n      data-ride=\"carousel\"\n    >\n      <ol className=\"carousel-indicators\">\n        <li\n          data-target=\"#carouselExampleIndicators\"\n          data-slide-to=\"0\"\n          className=\"active\"\n        ></li>\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\n      </ol>\n      <div className=\"carousel-inner\">\n        <div className=\"carousel-item active\">\n          <img\n            className=\"d-block w-100 h-40\"\n            src= {Hands}\n            alt=\"First slide\"\n          />\n        </div>\n        <div className=\"carousel-item\">\n          <img \n          className=\"d-block w-100\" \n          src= {Homeless}\n          alt=\"Second slide\" />\n        </div>\n        <div className=\"carousel-item\">\n          <img \n          className=\"d-block w-100\" \n          src= {Alms}\n          alt=\"Third slide\" />\n        </div>\n      </div>\n      <a\n        className=\"carousel-control-prev\"\n        href=\"#carouselExampleIndicators\"\n        role=\"button\"\n        data-slide=\"prev\"\n      >\n        <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n        <span className=\"sr-only\">Previous</span>\n      </a>\n      <a\n        className=\"carousel-control-next\"\n        href=\"#carouselExampleIndicators\"\n        role=\"button\"\n        data-slide=\"next\"\n      >\n        <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n        <span className=\"sr-only\">Next</span>\n      </a>\n    </div>\n  );\n}\n\nexport default Imagen;\n","import React from \"react\";\nimport \"../assets/css/Info.css\";\nimport { TeamOutlined } from \"@ant-design/icons\";\n\nfunction Info(props) {\n  return (\n    <section className=\"info-container\">\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <p className=\"teamOutlined\">\n            <TeamOutlined />\n          </p>\n        </div>\n        <div className=\"col-8\">\n          <div className=\"row-8 about-b\">About</div>\n          <div className=\"row-8 info-i\">\n            Final-project connects nonprofits, donors, and companies in nearly\n            every country in the world. We help fellow nonprofits access the\n            funding, tools, training, and support they need to serve their\n            communities.\n          </div>\n          <div className=\"row-8\"><a href=\"/projects\" className=\"buttooon\">Donate</a></div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Info;\n","export default __webpack_public_path__ + \"static/media/quote.73929164.jpg\";","import React from \"react\";\nimport \"../assets/css/Parallax.css\";\nimport Quote from \"./img/quote.jpg\";\n\nfunction Parallax(props) {\n  return (\n    <div\n      className=\"parallax-img\"\n      style={{\n        backgroundImage: `url(\"${Quote}\")`,\n      }}\n    ></div>\n  );\n}\n\nexport default Parallax;\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Col, Row } from \"antd\";\n// import Navbar from \"../components/Navbar\";\nimport Datos from \"../components/Datos\";\nimport Imagen from \"../components/Imagen\";\nimport Info from \"../components/Info\";\nimport Parallax from \"../components/Parallax\";\n// import Footer from \"../components/Footer\";\n\n\n\n\nfunction Dashboard(props) {\n  return (\n    <Row>\n      <Col xs={24}>\n        {/* <Navbar></Navbar> */}\n        <Imagen></Imagen>\n        <Datos></Datos>\n        <Info></Info>\n        <Parallax></Parallax>\n        {/* <Footer></Footer> */}\n      </Col>\n    </Row>\n  );\n}\n\nexport default Dashboard;\n","import gql from 'graphql-tag';\n\nexport const LOGIN_USER = gql`\nmutation loginUser($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    token\n    user {\n      _id\n    }\n  }\n}\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($name: String!, $last_name: String!, $username: String!, $email: String!, $password: String!) {\n    addUser(name: $name, last_name: $last_name, username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n        name\n        last_name\n      }\n    }\n  }\n`;\n\nexport const ADD_POST = gql`\n  mutation addPost($postData: PostInput){\n    addPost(postData: $postData){\n      _id\n      project_name\n      description\n      publication_date\n      location\n      image\n      fundraise_destination\n      fundraise_account\n      results\n      expiration_date\n      donation_desired\n      user {\n        userId\n        username\n        name\n        last_name\n      }\n    }\n  }\n`","\nimport React, { useState } from 'react';\nimport { Form, Alert } from 'react-bootstrap';\nimport Auth from '../utils/auth';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { LOGIN_USER } from '../utils/mutations';\n\nconst LoginForm = () => {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [validated] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n\n  \n  const[loginUser, {error}] = useMutation(LOGIN_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await loginUser({\n        variables: { ...userFormData}\n      });\n\n      Auth.login(data.login.token)\n\n      // console.log(data);\n    } catch (e) {\n      console.error(e);\n    }\n\n    setUserFormData({\n      name:\"\",\n      last_name:\"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      phone:\"\",\n    });\n  };\n\n  return (\n  \n    <section className=\"flex flex-col m-8\">\n      <div className=\"flex items-center justify-center flex-1\">\n        <div className=\"w-full px-4 py-12 text-center rounded-lg sm:border-2 lg:px-24 lg:max-w-xl sm:max-w-md\">\n        <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <h1 className=\"w-full mb-8 text-3xl font-bold tracking-wider text-gray-600\">\n              Login\n            </h1>\n        \n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your login credentials!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email' >Email</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Your email'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          className=\"py-2 font-bold text-white transition duration-200 bg-red-900 rounded shadow-lg hover:bg-red-800 w-60 hover:shadow-xl\"\n          >\n          Submit\n        </button>\n      </Form>\n      <div className=\"mt-12 mb-4 text-center\">\n            <span>Don't have an account?  </span>\n            <a\n              href=\"/signUp\"\n              className=\"font-light text-md text-red-600 underline font-semibold hover:text-red-800\"\n            >\n              Create One\n            </a>\n          </div>\n\n      {error && <div>Login failed</div>}\n          \n        </div>\n        </div>\n        </section>\n   \n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Col, Row } from \"antd\";\nimport LoginForm from \"../components/LoginForm\";\n\n\nfunction Login(props) {\n  return (\n    <Row>\n      <Col xs={24}>\n        <LoginForm>\n          </LoginForm>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Login;\n","export default __webpack_public_path__ + \"static/media/1.679939f1.jpg\";","import React from \"react\";\n// import HeaderItem from \"../HeaderItem/HeaderItem.js\";\nimport \"./PostDetailHeader.css\";\nimport { Link } from \"react-router-dom\";\n\n// Sets the layout for the header container and maps over headerSection to display all the elements in the header\nfunction postDetailHeader({ projectName, date }) {\n  return (\n    <div className=\"postDetailHeaderContainer\">\n      <div className=\"postDetailHeader\">\n        <div className=\"postDetailTitle\">{projectName}</div>\n        <div className=\"postDateCreated\">Created: {date}</div>\n      </div>\n      <Link to=\"/payment\">\n        <button className=\"button\" >Donate</button>\n      </Link>\n    </div>\n  );\n}\n\nexport default postDetailHeader;\n","import React from \"react\";\n// import HeaderItem from \"../HeaderItem/HeaderItem.js\";\nimport \"./PostDetailBodyListItem.css\";\n\n// Sets the layout for the header container and maps over headerSection to display all the elements in the header\nfunction PostDetailBodyListItem({ type, value }) {\n  let isType;\n  let contentToReturn;\n  if (type !== \"CONTACT ME ABOUT THIS PROJECT\") {\n    isType = type;\n  }\n  if (type !== \"CONTACT ME ABOUT THIS PROJECT\") {\n    contentToReturn = <div className=\"miscellaneousContent\">{value}</div>;\n  } else {\n    contentToReturn = (\n      <a href={`mailto:${value}`} className=\"contactLink\">\n        {type}\n      </a>\n    );\n  }\n\n  return (\n    <li className=\"miscellaneousTitle\">\n      {/* {(() => {\n        if (type !== \"CONTACT ME ABOUT THIS PROJECT\")\n          return [type, <div className=\"miscellaneousContent\">{value}</div>];\n        else\n          return [\n            <a href={`mailto:${value}`} className=\"contactLink\">\n              CONTACT ME ABOUT THIS PROJECT\n            </a>,\n          ];\n      })()} */}\n      {isType}\n      {contentToReturn}\n    </li>\n  );\n}\n\nexport default PostDetailBodyListItem;\n","import React from \"react\";\n// import HeaderItem from \"../HeaderItem/HeaderItem.js\";\nimport \"./PostDetailBody.css\";\nimport PostDetailBodyListItem from \"../PostDetailBodyListItem\";\n// Sets the layout for the header container and maps over headerSection to display all the elements in the header\nfunction postDetailBody({ description, results, ulProps }) {\n  return (\n    <div className=\"postDetailBodyContainer\">\n      <div className=\"postDetailBodyLhs\">\n        <div className=\"postDetailDescription\">\n          {description}\n          <br></br>\n          <br></br>\n          Our achievements so far:\n          <br></br>\n          {results}\n        </div>\n      </div>\n      <div className=\"postDetailBodyRhs\">\n        <div className=\"miscellaneous\">\n          <ul>\n            {ulProps.map((ulProp, index) => (\n              <PostDetailBodyListItem\n                type={ulProp.type}\n                value={ulProp.value}\n                key={index}\n              />\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default postDetailBody;\n","import React from \"react\";\n\nimport \"./PostDetailProgressBar.css\";\nimport styled, { keyframes } from \"styled-components\";\n// import { FaKissWinkHeart } from \"react-icons/fa\";\nimport { FaHandHoldingHeart } from 'react-icons/fa';\n\n// Sets the layout for the header container and maps over headerSection to display all the elements in the header\n\n// const InnerBar = styled.div`\n//   height: 100%;\n//   background-color: #44c59f;\n//   border-radius: 10px;\n//   position: relative;\n\n//   animation: ${(props) => props.loadBar} 3s normal forwards;\n//   width: 0;\n// `;\n\nfunction PostDetailProgressBar({ percentage }) {\n  const loadBar = keyframes`\n0% { width: 0; }\n100% { width: ${percentage}%; }\n`;\n\n  const InnerBar = styled.div`\n    height: 100%;\n    background-color: #44c59f;\n    border-radius: 10px;\n    position: relative;\n\n    animation: ${loadBar} 3s normal forwards;\n    width: 0;\n  `;\n\n  return (\n    <div className=\"progressBarContainer\">\n      <div className=\"progressBarCommentContainer\">\n        <div className=\"progressBarComment\">\n          Goal\n        </div>\n        <div className=\"outerBarContainer\">\n          <div className=\"outerBar\">\n            <InnerBar props={loadBar}>\n              <div className=\"barPercentagePointer\"></div>\n              <div className=\"barTextPercentage\">{percentage}%</div>\n            </InnerBar>\n          </div>\n        </div>\n      </div>\n      <div className=\"progressBarCommentContainer\">\n        <div className=\"progressBarComment\">\n          Raised <FaHandHoldingHeart className=\"padding: 5\" />\n        </div>\n        <div className=\"outerBarContainer\">\n          <div className=\"outerBar\">\n            <InnerBar props={loadBar}>\n              <div className=\"barPercentagePointer\"></div>\n              <div className=\"barTextPercentage\">{percentage}%</div>\n            </InnerBar>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  );\n}\n\nexport default PostDetailProgressBar;\n","import { gql } from \"@apollo/client\";\n\nexport const QUERY_ALL_POSTS = gql`\n  query allPosts {\n    allPosts {\n      _id\n      project_name\n      publication_date\n      image\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_POST = gql`\n  query singlePost($postId: ID!) {\n    singlePost(postId: $postId) {\n      _id\n      project_name\n      description\n      publication_date\n      location\n      image\n      fundraise_destination\n      fundraise_account\n      results\n      expiration_date\n      donation_desired\n      user {\n        username\n        email\n      }\n      donations {\n        _id\n        amount\n        date\n        userId\n      }\n    }\n  }\n`;\n\nexport const QUERY_USER_POSTS = gql`\n  query singleUser {\n    singleUser {\n      _id\n      project_name\n    }\n  }\n`;\n","import React from \"react\";\nimport asd from \"../../assets/1.jpg\";\nimport \"./postDetail.css\";\n\nimport PostDetailHeader from \"../../components/PostDetailHeader\";\nimport PostDetailBody from \"../../components/PostDetailBody\";\nimport PostDetailProgressBar from \"../../components/PostDetailProgressBar\";\n\nimport { useParams } from \"react-router-dom\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_SINGLE_POST } from \"../../utils/queries\";\n\n\nexport default function Details() {\n  let { id } = useParams();\n  const { loading, data } = useQuery(QUERY_SINGLE_POST, {\n    variables: { postId: id },\n  });\n  const postData = data?.singlePost || {};\n\n  const ulProps = [\n    {\n      type: \"Author\",\n      // value: \"Placeholder Name\",\n      value: postData.user?.username,\n    },\n    {\n      type: \"Location\",\n      value: postData.location,\n    },\n    {\n      type: \"Donation Destiny\",\n      value: postData.fundraise_destination,\n    },\n    {\n      type: \"Post Expires On :\",\n      value: postData.expiration_date,\n    },\n    {\n      type: \"CONTACT ME ABOUT THIS PROJECT\",\n      // value: \"PlaceholderEmail@email.com\",\n      value: postData.user?.email,\n    },\n  ];\n\n  // NEEDS CURRENT DONATIONS TO WORK\n  /*\n  const percentage = Math.round(\n    (postDetails.currentDonations / postDetails.donationAsked) * 100\n  );\n  */\n\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n  // const percentage = 20;\n\n  const totalDonation = postData.donations?.reduce((a,{amount}) => a+amount,0);\n  const percentage = (totalDonation ? Math.round((totalDonation / postData.donation_desired) * 100): 0);\n\n  // console.log(\"percentage:\", percentage);\n  // console.log(\"donation_desired:\", postData.donation_desired);\n  // console.log(\"total donation\", totalDonation);\n  // console.log(\"postData:\", postData);\n  // console.log(\"data:\", data);\n  // console.log(\"id:\", id);\n\n  return (\n    <div className=\"postDetailContainer\">\n      <div className=\"postDetail\">\n        <div\n          className=\"postDetailImage\"\n          style={{\n            backgroundImage: `url(${asd})`,\n          }}\n        ></div>\n        <PostDetailHeader\n          projectName={postData.project_name}\n          date={postData.publication_date}\n        />\n        <PostDetailBody\n          description={postData.description}\n          results={postData.donation_desired}\n          ulProps={ulProps}\n        // email={postDetails.userEmail}\n        />\n        <div className=\"collageSeparator\"></div>\n        <PostDetailProgressBar percentage={percentage} />\n\n\n      </div>\n    </div>\n  );\n}\n\n","export default __webpack_public_path__ + \"static/media/createPostBG2.ca5e1046.png\";","import React, { useState } from \"react\";\n// import { DatePicker } from 'antd';\n// import asd from '../../assets/projectImg_mockup.jpg';\nimport bgImage from \"../../assets/createPostBG2.png\";\nimport \"./CreatePost.css\";\n\nimport { Form, Input, Button, Upload, message } from \"antd\";\nimport { InboxOutlined } from \"@ant-design/icons\";\nimport \"antd/dist/antd.css\";\n\nimport Auth from '../../utils/auth';\nimport { Redirect, useParams } from 'react-router-dom';\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_POST } from \"../../utils/mutations\";\n\nexport default function CreatePost() {\n  // Settin up the addpost mutation\n  const [addPost, { error }] = useMutation(ADD_POST);\n\n  // Setting up the dragbox (upload file)\n  const { Dragger } = Upload;\n  const { TextArea } = Input;\n\n  // Setting up the form\n  const [form] = Form.useForm();\n  const formLayout = \"vertical\";\n\n  // Store form data\n  const [userFormData, setUserFormData] = useState({\n    project_name: \"\",\n    description: \"\",\n    fundraise_destination: \"\",\n    fundraise_account: \"\",\n    results: \"\",\n    location: \"\",\n    donation_desired: \"\",\n  });\n\n  // Handle form change\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    // console.log(\"name\", name, \"\\nvalue\", value);\n    // console.log('userformdata',userFormData);\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormFail = async (event) => {\n    console.log(\"Please fill all the fields\");\n    // console.log(event);\n  };\n\n  // Handle form submit\n  const handleFormSubmit = async (event) => {\n    try {\n      console.log(\"Trying to create post\");\n      console.log(\"formData\", userFormData);\n      const postData = userFormData;\n      await addPost({\n        variables: { postData },\n      });\n    } catch (err) {\n      console.error(err);\n      console.log(error);\n    }\n\n    setUserFormData({\n      project_name: \"\",\n      description: \"\",\n      fundraise_destination: \"\",\n      fundraise_account: \"\",\n      results: \"\",\n      location: \"\",\n      donation_desired: \"\",\n    });\n  };\n\n  // Configuring dragbox\n  const props = {\n    name: \"file\",\n    multiple: false,\n    action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\n    onChange(info) {\n      const { status } = info.file;\n      if (status !== \"uploading\") {\n        console.log(info.file, info.fileList);\n      }\n      if (status === \"done\") {\n        message.success(`${info.file.name} file uploaded successfully.`);\n      } else if (status === \"error\") {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    },\n    onDrop(e) {\n      console.log(\"Dropped files\", e.dataTransfer.files);\n    },\n  };\n\n  if (Auth.loggedIn() === false) {\n    return <Redirect to=\"/projects\" />;\n  }\n\n  return (\n    <div className=\"createPostContainer\">\n      <div className=\"bgImage\" style={{ backgroundImage: `url(${bgImage})` }}>\n        <div className=\"bgImageText\">\n          Welcome to the family<br></br>Tell us more about your project\n        </div>\n      </div>\n      <div className=\"createPostBodyContainer\">\n        <div className=\"createPostFormTitle\">\n          Please fulfill the following fields\n        </div>\n        <div className=\"createPostFormContainer\">\n          <Form\n            layout={formLayout}\n            form={form}\n            // onValuesChange={onFormLayoutChange}\n            className=\"createPostForm\"\n            onFinish={handleFormSubmit}\n            onFinishFailed={handleFormFail}\n          >\n            <Form.Item\n              label=\"Project Name\"\n              name=\"formName\"\n              onChange={handleInputChange}\n              value={userFormData.project_name}\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input the name of your project!\",\n                },\n              ]}\n            >\n              <Input placeholder=\"input placeholder\" name=\"project_name\" />\n            </Form.Item>\n            <Form.Item\n              label=\"Description\"\n              onChange={handleInputChange}\n              value={userFormData.description}\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input the description of your project!\",\n                },\n              ]}\n            >\n              <TextArea\n                rows={4}\n                placeholder=\"Describe your project\"\n                name=\"description\"\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Fundraise Destination\"\n              onChange={handleInputChange}\n              value={userFormData.fundraise_destination}\n              name=\"formDestination\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your fundraise destination!\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"Doctors without borders\"\n                name=\"fundraise_destination\"\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Fundraise Account\"\n              onChange={handleInputChange}\n              value={userFormData.fundraise_account}\n              name=\"formAccount\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your fundraise account!\",\n                },\n              ]}\n            >\n              <Input placeholder=\"123456789\" name=\"fundraise_account\" />\n            </Form.Item>\n            <Form.Item\n              label=\"Previous Results\"\n              onChange={handleInputChange}\n              value={userFormData.results}\n              name=\"formResults\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your previous results\",\n                },\n              ]}\n            >\n              <Input\n                placeholder=\"So far we have planted more than 1000 trees and saved...\"\n                name=\"results\"\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Location\"\n              onChange={handleInputChange}\n              value={userFormData.location}\n              name=\"formLocation\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Please input your project location!\",\n                },\n              ]}\n            >\n              <Input placeholder=\"Zapopan, Jalisco, Mexico\" name=\"location\" />\n            </Form.Item>\n            <Form.Item\n              label=\"Donation Amount Desired\"\n              onChange={handleInputChange}\n              value={userFormData.donation_desired}\n              name=\"formDonationDesired\"\n            >\n              <Input placeholder=\"3000\" name=\"donation_desired\" />\n            </Form.Item>\n            <Form.Item>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n        <div className=\"createPostUploadContainer\">\n          <div className=\"createPostUploadTitle\">\n            <div>Upload Project Image</div>\n          </div>\n          <div className=\"createPostUpload\">\n            <Dragger {...props}>\n              <p className=\"ant-upload-drag-icon\">\n                <InboxOutlined />\n              </p>\n              <p className=\"ant-upload-text\">\n                Click or drag file to this area to upload\n              </p>\n              <p className=\"ant-upload-hint\">\n                Support for a single or bulk upload. Strictly prohibit from\n                uploading company data or other band files\n              </p>\n            </Dragger>\n          </div>\n\n        </div>\n      </div>\n    </div>\n\n\n  );\n}\n","import React from \"react\";\nimport \"./PostListItem.css\";\nimport { Card } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nfunction PostListItem({ projectName, image, date, projectId }) {\n  const { Meta } = Card;\n\n  return (\n    <Link to={{ pathname: `/postdetail/${projectId}` }}>\n      <Card\n        hoverable\n        className=\"cardElement\"\n        cover={<img alt=\"example\" src={image} className=\"cardElementImage\" />}\n      >\n        <Meta title={projectName} description={date} />\n      </Card>\n    </Link>\n  );\n}\n\nexport default PostListItem;\n","export default __webpack_public_path__ + \"static/media/postListImg.d87d71e9.jpg\";","export default __webpack_public_path__ + \"static/media/titleBG.76b41b3e.jpg\";","import React from \"react\";\nimport \"./PostList.css\";\nimport PostListItem from \"../../components/PostListItem\";\nimport bgImage from \"../../assets/postListImg.jpg\";\nimport titleBg from \"../../assets/titleBG.jpg\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_USER_POSTS } from \"../../utils/queries\";\n\nfunction PostList() {\n  const { loading, error, data } = useQuery(QUERY_USER_POSTS);\n  const postsData = data?.singleUser || {};\n\n  // const cardsData = [\n  //   {\n  //     projectName: \"Mexican Sea Turtle Foundation\",\n  //     image: bgImage,\n  //     date: \"05/14/2021\",\n  //     projectId: 1,\n  //     key: 1,\n  //   },\n  //   {\n  //     projectName: \"'My first Macbook\",\n  //     image: bgImage,\n  //     date: \"01/31/2021\",\n  //     projectId: 2,\n  //     key: 2,\n  //   },\n  //   {\n  //     projectName: \"Summer Scholarship in foreign country\",\n  //     image: bgImage,\n  //     date: \"08/14/2021\",\n  //     projectId: 3,\n  //     key: 3,\n  //   },\n  //   {\n  //     projectName: \"Breakfast Club Funding\",\n  //     image: bgImage,\n  //     date: \"09/01/2021\",\n  //     projectId: 4,\n  //     key: 4,\n  //   },\n  //   {\n  //     projectName: \"Travel to Mahahual\",\n  //     image: bgImage,\n  //     date: \"08/08/2021\",\n  //     projectId: 5,\n  //     key: 5,\n  //   },\n  // ];\n\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n  if (error) return `Error! ${error.message}`;\n\n  return (\n    <div className=\"postListContainer\">\n      <div\n        className=\"postListTitle\"\n        style={{ backgroundImage: `url(${titleBg})` }}\n      >\n        My projects\n      </div>\n      <div className=\"postListCardContainer\">\n        {postsData.map((postData) => (\n          <PostListItem\n            projectName={postData.project_name}\n            image={bgImage}\n            date={postData.publication_date}\n            projectId={postData._id}\n            key={postData._id}\n          />\n        ))}\n      </div>\n      <a\n        href=\"/createpost\"\n        className=\"fixed z-50 float-right w-16 h-16 pt-1 pl-3 ml-8 text-5xl text-white bg-red-800 rounded-full mt-96\"\n      >\n        {\" \"}\n        +{\" \"}\n      </a>\n    </div>\n  );\n}\n\nexport default PostList;\n","import React from \"react\";\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Form } from 'react-bootstrap';\nimport { Link } from \"react-router-dom\";\n\n\n\n\nconst stripePromise = loadStripe('pk_test_51JQXFLBDY7byDJWM3dtXFPp5JRmEDrlfH1spNLglfjcSSwHS7iXrFJZHIeKDWJp76eWH6m7Yfn9DfpFqj1NA9AjU00Ur5lESNY');\n\nconst CheckoutForm = () => {\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n\n    if (!error) {\n      console.log(paymentMethod)\n      elements.getElement(CardElement).clear();\n    }\n\n  }\n\n  return <form onSubmit={handleSubmit}>\n    <Form.Group>\n      <Form.Label htmlFor='amount' >Amount</Form.Label>\n      <Form.Control\n        type='number'\n        placeholder='Amount'\n        name='amount'\n        required\n      />\n      <Form.Control.Feedback type='invalid'>Amount is required!</Form.Control.Feedback>\n    </Form.Group>\n    <CardElement />\n    <Link to=\"/greetings\">\n      <button className=\"mt-8 py-2 font-bold text-white transition duration-200 bg-red-900 rounded shadow-lg hover:bg-red-800 w-60 hover:shadow-xl\">\n        Donate\n      </button>\n    </Link>\n  </form>\n}\n\n\nfunction PaymentCard(props) {\n  return (\n    <section className=\"flex flex-col m-8\">\n      <div className=\"flex items-center justify-center flex-1\">\n        <div className=\"w-full px-4 py-12 text-center rounded-lg sm:border-2 lg:px-24 lg:max-w-xl sm:max-w-md\">\n          <Elements stripe={stripePromise}>\n            <CheckoutForm />\n          </Elements>\n\n        </div>\n      </div>\n    </section>\n\n  );\n}\n\nexport default PaymentCard;\n","import React from \"react\";\nimport PaymentCard from \"../components/PaymentCard\";\nimport { Col, Row } from \"antd\";\n\n\nfunction Payment(props) {\n  return (\n    <Row>\n      <Col xs={24}>\n        <PaymentCard>\n          </PaymentCard>\n      </Col>\n    </Row>\n  );\n}\n\nexport default Payment;\n","import React from \"react\";\nimport \"./PostList.css\";\nimport PostListItem from \"../../components/PostListItem\";\nimport bgImage from \"../../assets/postListImg.jpg\";\nimport titleBg from \"../../assets/titleBG.jpg\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_ALL_POSTS } from \"../../utils/queries\";\n\nfunction PostList() {\n  const { loading, error, data } = useQuery(QUERY_ALL_POSTS);\n  const postsData = data?.allPosts || {};\n\n  // if we are still waiting the answer from the query, display the loading message\n  if (loading) {\n    return <h2>LOADING...</h2>;\n  }\n  if (error) return `Error! ${error.message}`;\n  // console.log(postsData);\n\n  return (\n    <div className=\"postListContainer\">\n      <div\n        className=\"postListTitle\"\n        style={{ backgroundImage: `url(${titleBg})` }}\n      >\n        Meet our collaborators\n      </div>\n      <div className=\"postListCardContainer\">\n      {postsData.map((postData) => (\n          <PostListItem\n            projectName={postData.project_name}\n            image={bgImage}\n            date={postData.publication_date}\n            projectId={postData._id}\n            key={postData._id}\n          />\n        ))}\n\n        {/* {cardsData.map((cardData) => (\n          <PostListItem\n            projectName={cardData.projectName}\n            image={cardData.image}\n            date={cardData.date}\n            projectId={cardData.projectId}\n            key={cardData.key}\n          />\n        ))} */}\n      </div>\n      <a\n        href=\"/createpost\"\n        className=\"fixed z-50 float-right w-16 h-16 pt-1 pl-3 ml-8 text-5xl text-white bg-red-800 rounded-full mt-96\"\n      >\n        {\" \"}\n        +{\" \"}\n      </a>\n    </div>\n  );\n}\n\nexport default PostList;\n","import React from \"react\";\nimport \"./Greetings.css\";\nimport { Result, Button } from 'antd';\nimport { Link } from \"react-router-dom\";\n\n\nfunction Greetings(props) {\n  return (\n    <div>\n\n      <Result\n        status=\"success\"\n        title=\"Successful Donation!\"\n        subTitle=\"Order number: 2017182818828182881\"\n        extra={[\n\n          <Button type=\"primary\" key=\"console\">\n            Home Page\n          </Button>,\n\n          <Button key=\"buy\">View more projects</Button>,\n        ]}\n      />,\n    </div>\n  );\n}\n\n\nexport default Greetings;\n","import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { Form, Alert } from \"react-bootstrap\";\n\nimport Auth from \"../utils/auth\";\nimport { ADD_USER } from \"../utils/mutations\";\n\nconst SignupForm = () => {\n  const [userFormData, setUserFormData] = useState({\n    name: \"\",\n    last_name: \"\",\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n\n  const [validated] = useState(false);\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addUser({\n        variables: { ...userFormData },\n      });\n\n      Auth.login(data.addUser.token);\n    } catch (e) {\n      console.error(e);\n      setShowAlert(true);\n    }\n\n    setUserFormData({\n      name: \"\",\n      last_name: \"\",\n      username: \"\",\n      email: \"\",\n      password: \"\",\n    });\n  };\n\n  return (\n \n      <section className=\"flex flex-col m-8\">\n        <div className=\"flex items-center justify-center flex-1\">\n          <div className=\"w-full px-4 py-12 text-center rounded-lg sm:border-2 lg:px-24 lg:max-w-xl sm:max-w-md\">\n            {/* This is needed for the validation functionality above */}\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n              {/* show alert if server response is bad */}\n              <h1 className=\"w-full mb-8 text-3xl font-bold tracking-wider text-gray-600\">\n                Sign Up\n              </h1>\n              <Alert\n                dismissible\n                onClose={() => setShowAlert(false)}\n                show={showAlert}\n                variant=\"danger\"\n              >\n                Something went wrong with your signup!\n              </Alert>\n\n              <Form.Group>\n                <Form.Label htmlFor=\"name\">Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Your Name\"\n                  name=\"name\"\n                  onChange={handleInputChange}\n                  value={userFormData.name}\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Name is required!\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label htmlFor=\"last_name\">Last Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Your Last name\"\n                  name=\"last_name\"\n                  onChange={handleInputChange}\n                  value={userFormData.last_name}\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Last Name is required!\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label htmlFor=\"username\">Username</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Your username\"\n                  name=\"username\"\n                  onChange={handleInputChange}\n                  value={userFormData.username}\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  User Name is required!\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label htmlFor=\"email\">Email</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Your email address\"\n                  name=\"email\"\n                  onChange={handleInputChange}\n                  value={userFormData.email}\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Email is required!\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group>\n                <Form.Label htmlFor=\"password\">Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Your password\"\n                  name=\"password\"\n                  onChange={handleInputChange}\n                  value={userFormData.password}\n                  required\n                />\n                <Form.Control.Feedback type=\"invalid\">\n                  Password is required!\n                </Form.Control.Feedback>\n              </Form.Group>\n\n              <Form.Group>\n              <button\n                disabled={!(userFormData.username && userFormData.email && userFormData.password)}\n                htmlType=\"submit\"\n                className=\"py-2 font-bold text-white transition duration-200 bg-red-900 rounded shadow-lg hover:bg-red-800 w-60 hover:shadow-xl\"\n                // variant=\"success\"\n              >\n                Submit\n              </button>\n              </Form.Group>\n              \n              {/* {error && <div>Sign up failed</div>} */}\n            </Form>\n            \n          </div>\n        </div>\n      </section>\n\n  );\n};\n\nexport default SignupForm;\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Col, Row } from \"antd\";\n\nimport SignupForm from \"../components/SignupForm\";\n\n\nfunction SignUp(props) {\n  return (\n    <Row>\n      <Col xs={24}>\n\n        <SignupForm></SignupForm>\n\n      </Col>\n    </Row>\n  );\n}\n\nexport default SignUp;\n","import React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Dashboard from \"../pages/Dashboard\";\nimport Login from \"../pages/Login\";\nimport PostDetail from \"../pages/PostDetail\";\nimport CreatePost from \"../pages/CreatePost\";\nimport userProjects from \"../pages/userPostList\";\nimport Payment from \"../pages/Payment\";\nimport PostList from \"../pages/PostList\";\nimport Greetings from \"../pages/Greetings\";\n\nimport SignUp from \"../pages/SignUp\";\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem(\"id_token\");\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction Routes() {\n  return (\n    <ApolloProvider client={client}>\n      <BrowserRouter>\n\n        <Navbar></Navbar>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/projects\" component={PostList} />\n          <Route path=\"/createpost\" component={CreatePost} />\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/postdetail/:id\" component={PostDetail} />\n          <Route path=\"/signUp\" component={SignUp} />\n          <Route path=\"/userprojects\" component={userProjects} />\n          <Route path=\"/payment\" component={Payment} />\n          <Route path=\"/greetings\" component={Greetings} />\n        </Switch>\n        <Footer></Footer>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n}\n\nexport default Routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './routes/Routes';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}